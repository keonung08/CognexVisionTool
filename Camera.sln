// Form1 로드 시 이벤트
// InitializeAcquisition() -> CogAcqfFifoTool생성, FrameGrabber생성, 노출/밝기/대비 지원 여부 확인 및 UI설정

// 사용자 조작
// 1회 취득 버튼 클릭(이미지 취득)
// 이미지 라이브 ON/OFF 버튼 클릭(라이브 이미지 확인), 밝기 숫자 조정(밝기 값 적용), 대비 숫자 조정(대비 값 적용), 노출 숫자 조정(노출 값 적용)
using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Windows.Forms;
using Cognex.VisionPro;
using Cognex.VisionPro.Exceptions;


namespace WindowsFormsApp2
{
    public partial class AcqFifo : Form
    {
        private CogAcqFifoTool myTool; // 이미지 취득 도구
        private ICogAcqBrightness myBrigtness; // 밝기 제어 객체
        private ICogAcqContrast myContrast; // 대비 제어 객체
        private ICogAcqExposure myExposure; // 노출 제어 객체
        private ICogAcqFifo myAcqFifo = null; // acqfifo 객체(이미지 취득)
        private ICogFrameGrabber myFrameGrabber = null; // 프레임 그레버 - 신호를 데이터로 변환(카메라 연결용)
        private int numAcqs = 0; // 이미지 획득 횟수 카운트
        

        public AcqFifo()
        {
            InitializeComponent();
            InitializeAcquisition(); // 폼 로드시 카메라 초기화
        }

        protected override void Dispose(bool disposing)
        {
            // 리소스 해제
            if (disposing)
            {
                if (components != null)
                {
                    components.Dispose(); // 컴포넌트 리소스 해제
                }
                CogFrameGrabbers frameGrabbers = new CogFrameGrabbers(); // 프레임 그레버 생성
                foreach (ICogFrameGrabber fg in frameGrabbers)
                    fg.Disconnect(false); // 카메라 연결해제
            }
            base.Dispose(disposing);
            
        }
       
       
        private void InitializeAcquisition()
        {
            this.Visible = true;
            
            try
            {
                myTool = new CogAcqFifoTool(); // AcqFifoTool 객체 생성
                
                // 프레임 그레버 목록 생성
                CogFrameGrabbers myFrameGrabbers = new CogFrameGrabbers();
                if (myFrameGrabbers.Count < 1)
                    throw new CogAcqNoFrameGrabberException("프레임 예외");


                myFrameGrabber = myFrameGrabbers[0]; // 첫 번째 그레버 선택
                type.Text = myFrameGrabber.Name; // 보드 이름 라벨에 표시
                videoformat.Items.Clear(); // 콤보 박스 초기화
               
                for (int i = 0; i < myFrameGrabber.AvailableVideoFormats.Count; i++)
                    videoformat.Items.Add(myFrameGrabber.AvailableVideoFormats[i]);

                videoformat.SelectedIndexChanged += new EventHandler(videoformat_SelectedIndexChanged); // 콤보박스 이벤트 핸들러 등록
                if (videoformat.Items.Count > 0) 
                {
                    videoformat.SelectedIndex = 0; // 첫번째 순서 가져옴
                    videoformat_SelectedIndexChanged(videoformat, EventArgs.Empty); // 비디오 포맷 강제 호출
                }
                btn_acq.Enabled = false; // 비디오 포맷이 되지 않은 상태일 때 버튼 비활성화

            }
            catch (CogAcqException ex)
            {
                MessageBox.Show("연결된 카메라 없음 " + ex.Message); // 예외 발생 시 메세지 출력
            }
        }


        private void videoformat_SelectedIndexChanged(object sender, EventArgs e) // videoformat 선택
        {
            string selectedFormat = videoformat.SelectedItem.ToString(); // 리스트를 문자열 형태로 받음

            myAcqFifo = myFrameGrabber.CreateAcqFifo(selectedFormat,CogAcqFifoPixelFormatConstants.Format8Grey,0,true);

            myTool.Operator = myAcqFifo; // myTool연산자를 myAcqFifo로 선언

            myExposure = myAcqFifo.OwnedExposureParams; // 노출 설정 객체
            myBrigtness = myAcqFifo.OwnedBrightnessParams; // 밝기 설정 객체
            myContrast = myAcqFifo.OwnedContrastParams; // 대비 설정 객체
            
            if (myBrigtness != null) // 밝기 값 조절
            {
                brightnessUpDown.Visible = true;
                brightness.Visible = false;
                brightnessUpDown.Value = (decimal)myBrigtness.Brightness;
            }
            else
            {
                brightnessUpDown.Visible = false;
                brightness.Visible = true;
            }

            if (myContrast != null) // 대비 값 조절
            {
                contrastUpDown.Visible = true;
                contrast.Visible = false;
                contrastUpDown.Value = (decimal)myContrast.Contrast;
            }
            else
            {
                contrastUpDown.Visible = false;
                contrast.Visible = true;
            }

            if (myExposure != null) // 노출 값 조절
            {
                exposureUpDown.Visible = true;
                exposure.Visible = false;
                exposureUpDown.Value = (decimal)myExposure.Exposure;
            }
            else
            {
                exposureUpDown.Visible = false;
                exposure.Visible = true;
            }

            myAcqFifo.Timeout = 500; 
            videoformat.Text = selectedFormat;
            btn_acq.Enabled = true; // videoformat 초기화 전까지 버튼 비활성화
        }


        private void btn_acq_Click(object sender, EventArgs e)
        {
            cogDisplay2.Image = null; // 초기 디스플레이 이미지
            cogDisplay2.Fit(true); // 이미지 그래픽 자동 맞춤
            int trignum; // 트리거 횟수
            if (myAcqFifo != null) // 이미지 취득 없을 시
            {
                cogDisplay2.Image = myAcqFifo.Acquire(out trignum); 
                numAcqs++; // 취득 횟수
                if (numAcqs > 5) 
                {
                    GC.Collect(); // 이미지 과부하를 막기 위해 회수 컬렉션 수행
                    numAcqs = 0;
                }
            }
            
        }

        private void btn_on_Click(object sender, EventArgs e)
        {
            
            try
            {
                if (myAcqFifo == null) // myAcqFifo값이 null일때 오류 메세지 출력 
                {
                    MessageBox.Show("FIFO 초기화 오류");
                    return;
                }
                    
                if (cogDisplay2.LiveDisplayRunning) // LiveDisplay일 경우
                {
                   cogDisplay2.StopLiveDisplay(); // 버튼 클릭시 stop
                   btn_on.Text = "Start Live Display"; // button text 출력
                }
                else 
                {
                    cogDisplay2.StartLiveDisplay(myAcqFifo); // 버튼 클릭시 start
                    cogDisplay2.Fit(true); // 이미지 그래픽 자동 맞춤
                    btn_on.Text = "Stop Live Display"; // button text 출력
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("라이브 오류: "+ ex.Message);
            }
        }
        
       
        private void brightnessUpDown_ValueChanged(object sender, EventArgs e)
        {
            if (myBrigtness == null)
                return;

            if (brightnessUpDown.Value >= 0 && brightnessUpDown.Value <= 1) // 밝기 조절 허용값 0~1까지
            {
                myBrigtness.Brightness = (double)brightnessUpDown.Value; // 밝기 값이 0이상 1이하일 경우, 해당 값 그대로 반영
            }
            else 
            {
                brightnessUpDown.Value = 0m; // 0~1까지 범위 벗어나면 강제로 UI값을 0으로 설정
                myBrigtness.Brightness = 0; // 실제 밝기 값 0으로 설정
            }
        }

        private void contrastUpDown_ValueChanged(object sender, EventArgs e)
        {
            if(myContrast == null) 
                return;
            if (contrastUpDown.Value >= 0 && contrastUpDown.Value <= 1) // 대비 조절 허용값 0~1까지
            {
                myContrast.Contrast = (double)contrastUpDown.Value; // 대비 값이 0이상 1이하일 경우, 해당 값 그대로 반영
            }
            else 
            {
                contrastUpDown.Value = 0m; // 0~1까지 범위 벗어나면 강제로 UI값을 0으로 설정
                myContrast.Contrast = 0; // 실제 대비 값 0으로 설정
            }
        }

        private void exposureUpDown_ValueChanged(object sender, EventArgs e)
        {
            if (myExposure == null) 
                return;

            double exposureValue = (double)exposureUpDown.Value;

            if (exposureUpDown.Value >= 0 && exposureUpDown.Value <= 10000) // 노출 값 조절 허용값 0~10000까지
            {
                myExposure.Exposure = (double)exposureValue; // 노출 값이 0이상 10000이하일 경우, 해당 값 그대로 반영
            }
            else
            {
                exposureUpDown.Value = 0m; // 0~1까지 범위 벗어나면 강제로 UI값을 0으로 설정
                myExposure.Exposure = 0; // 실제 노출 값 0으로 설정
            }
        }

       
        private void AcqFifo_Load(object sender, EventArgs e)
        {
            Console.WriteLine("videoformat count: " + videoformat.Items.Count); // videoformat 횟수
            Console.WriteLine("myAcqFifo null? " + (myAcqFifo == null)); // myAcqFifo 값이 null인지 확인
            Console.WriteLine("myTool.Operator null? " + (myAcqFifo == null)); //myTool.Operator 값이 null인지 확인
        }

       
    }
}
